{"version":3,"sources":["pages/Home/index.js","weather.service.js","components/Header/index.js","routes.js","pages/erro/index.js","App.js","serviceWorker.js","index.js"],"names":["Home","props","state","api","suporte","dataAtual","Date","dataApi","diasSemana","tempoInfo","horaAHora","formatTempo","bind","nextProps","this","setState","prevState","num","className","cod","city","name","country","getDay","list","weather","main","parseInt","temp","temp_min","temp_max","map","lista","time","dt_txt","key","dt","getDate","getMonth","getFullYear","getHours","getMinutes","style","fontSize","Component","getWeatherData","lat","lon","axios","get","Header","form","inserirLat","inserirLon","getData","event","target","value","then","resp","data","catch","err","response","status","type","placeholder","id","onChange","onClick","Routes","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ecad44dc.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport '../../../node_modules/@fortawesome/fontawesome-free/css/all.min.css';\n\nclass Home extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            api: '',\n            suporte: {\n                dataAtual: new Date(),\n                dataApi: '',\n                diasSemana: ['Domingo', 'Segunda-Feira', 'Terça-Feira', 'Quarta-Feira', 'Quinta-Feira', 'Sexta-Feira', 'Sábado'],\n                tempoInfo: {\n                    'Thunderstorm':['Trovoada','11d','fas fa-bolt'],\n                    'Drizzle': ['Chuvisco','09d','fas fa-cloud-rain'],\n                    'Rain':['Chuva','10d','fas fa-cloud-showers-heavy'],\n                    'Snow':['Neve','13d','far fa-snowflake'],\n                    'Mist':['Névoa','50d','fas fa-smog'],\n                    'Smoke':['Fumaça','50d','fas fa-smog'],\n                    'Haze':['Neblina', '50d','fas fa-smog'],\n                    'Dust':['Poeira','50d','fas fa-smog'],\n                    'Fog':['Névoa','50d','fas fa-smog'],\n                    'Sand':['Areia','50d','fas fa-smog'],\n                    'Ash':['Cinzas','50d','fas fa-smog'],\n                    'Squall':['Squall','50d','fas fa-smog'],\n                    'Tornado':['Tornado0','50d','fas fa-wind'],\n                    'Clear':['Limpo','01d','fas fa-sun'],\n                    'Clouds':['Nuvens','02d','fas fa-cloud']\n                },\n                horaAHora: ''\n            }\n        };\n\n        this.formatTempo = this.formatTempo.bind(this)\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState((prevState) => ({\n            suporte: {\n                ...prevState.suporte,\n                dataApi: nextProps.api.dataApi\n            }\n        }))\n    }\n\n\n    formatTempo(num) {\n        if (num < 10) {\n            return '0' + num\n        } else {\n            return num\n        }\n    }\n\n\n\n    render() {\n        return (\n            <div className=\"container p-5\">\n                {this.props.api.cod === '200' &&\n                    <div>\n                        <div className=\"mainWeatherCard p-5\">\n                            <div className=\"row\">\n                                <div className=\"col-md-7\">\n                                    <h1><span>{this.props.api.city.name}</span>, {this.props.api.city.country}</h1>\n                                    <h3>{this.state.suporte.diasSemana[this.state.suporte.dataApi.getDay()]}</h3>\n                                    <h4>{this.state.suporte.tempoInfo[this.props.api.list[0].weather[0].main][0]} <i className={this.state.suporte.tempoInfo[this.props.api.list[0].weather[0].main][2]}></i></h4>\n                                    <div className=\"temp\">{`${parseInt(this.props.api.list[0].main.temp)}°`}</div>\n                                </div>\n                                <div className=\"col-md-5\">\n                                    <h1>{`Mínime de ${parseInt(this.props.api.list[0].main.temp_min)}°`}</h1>\n                                    <h1>{`Máxima de ${parseInt(this.props.api.list[0].main.temp_max)}°`}</h1>\n                                    <div className=\"icon\"><i className={this.state.suporte.tempoInfo[this.props.api.list[0].weather[0].main][2]}></i></div>\n                                </div>\n                            </div>\n                        </div>\n                        <div>\n                            <div className='mainWeatherList mt-4'>\n                                <h2>Próximas Horas</h2>\n                                <p>Confira o tempo para às próximas horas.</p>\n                                <table className=\"table table-dark table-striped\"> \n                                    <thead>\n                                        <tr>\n                                            <th>Dia</th>\n                                            <th>Hora</th>\n                                            <th>Clima</th>\n                                            <th>Mínima</th>\n                                            <th>Máxima</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody >\n                                        {this.props.api.list.map((lista) => {\n                                        let time = new Date(lista.dt_txt)\n                                        return (\n                                            <tr key={lista.dt}>\n                                                <td>\n                                                    <div className='row'>\n                                                        <div className='col-md-12'>\n                                                            {this.state.suporte.diasSemana[time.getDay()]}\n                                                        </div>\n                                                        <div className='col-md-12 smallf'>\n                                                            {this.formatTempo(time.getDate())}/{this.formatTempo(time.getMonth() + 1)}/{this.formatTempo(time.getFullYear())}\n                                                        </div>\n                                                    </div>\n                                                </td>\n                                                <td>{this.formatTempo(time.getHours())}:{this.formatTempo(time.getMinutes())}</td>\n                                                <td>{this.state.suporte.tempoInfo[lista.weather[0].main][0]}  <i className={this.state.suporte.tempoInfo[lista.weather[0].main][2]}></i></td>\n                                                <td>{`${parseInt(lista.main.temp_min)}°`}</td>\n                                                <td>{`${parseInt(lista.main.temp_max)}°`}</td>\n                                            </tr>\n                                            );\n                                        })\n                                        }\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n                }\n\n                {this.props.api === '400' &&\n                    <div className='row'>\n                        <div className='col-md-8'><h1>Valor inválido.</h1></div>\n                        <div className='col-md-4'><i style={{fontSize: '10rem'}} className=\"fas fa-bug\"></i></div>\n                    </div>\n                }\n\n                {this.props.api.cod === '429' &&\n                    <div className='row'>\n                        <div className='col-md-8'><h1>Excedido o limite de acesso.</h1></div>\n                        <div className='col-md-4'><i style={{fontSize: '16rem'}} className=\"fas fa-sad-tea\"></i></div>\n                    </div>\n                }\n\n            </div>\n        );\n    }\n}\n\nexport default Home;","import axios from 'axios';\n\nconst getWeatherData = (lat, lon) => {\n    \n    return axios.get(`https://api.openweathermap.org/data/2.5/forecast?APPID=7e06bd8c11c32dfc21196675a15cd05b&units=metric&lat=${lat}&lon=${lon}`)\n    \n} \n\nexport default getWeatherData","import React, { Component } from 'react';\nimport '../../../node_modules/@fortawesome/fontawesome-free/css/all.min.css';\nimport Home from '../../pages/Home';\nimport getWeatherData from '../../weather.service';\n\nclass Header extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            form: {\n                lat: '',\n                lon: ''\n            },\n            api:''\n        }\n\n        this.inserirLat = this.inserirLat.bind(this);\n        this.inserirLon = this.inserirLon.bind(this);\n        this.getData = this.getData.bind(this);\n    }\n\n\n    inserirLat(event) {\n        let form = this.state.form;\n        form.lat = event.target.value;\n        this.setState({form});\n    }\n\n    inserirLon(event) {\n        let form = this.state.form;\n        form.lon = event.target.value;\n        this.setState({form});\n    }\n\n    getData() {\n        getWeatherData(this.state.form.lat, this.state.form.lon)\n        .then((resp) => {\n            let state = this.state;\n            state.api = resp.data;\n            state.api.dataApi = new Date(state.api.list[0].dt_txt);\n            if (state.api.city.name) {\n                this.setState(state);\n            } else {\n                state.api.city.name = 'Local não nominado';\n                this.setState(state);\n            }\n        })\n        .catch((err) => {\n            let state = this.state;\n            if (err.response.status === 400) {\n                state.api = '400';\n                this.setState(state);\n            } else if(err.response.status === 429) {\n                state.api = '429';\n                this.setState(state);\n            } \n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <header className=\"container p-5\">\n                    <div className='row'>\n                        <div className='col-6'>\n                            <h1>Pesquisa </h1>\n                        </div>\n                        <div className='col-6'>\n                            <i className=\"fas fa-cloud-sun float-right\" style={{fontSize: '5rem'}}></i>\n                        </div>\n                    </div>\n                    <p>Encontre a previsão do tempo de acordo com as coordenadas a serem especificadas abaixo:  </p>\n                    <form>\n\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <input type=\"text\" className=\"form-control\" placeholder=\"Digite a latitude\" id=\"latitude\" value={this.state.form.lat} \n                                    onChange={this.inserirLat}/> \n                            </div>\n                            <div className=\"col\">\n                                <input type=\"text\" className=\"form-control\" placeholder=\"Digite a longitude\" id=\"longitude\" value={this.state.form.lon} \n                                    onChange={this.inserirLon}/> \n                            </div>\n                            <button type='button' className='btn btn-primary' onClick={this.getData}>Buscar</button>\n                        </div>\n\n                    </form>\n                </header>\n                <Home api={this.state.api}/>\n            </div>\n        );\n    }\n}\n\nexport default Header;\n\n/**/","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Header from './components/Header';\nimport Home from './pages/Home';\nimport Erro from './pages/erro'\n\nconst Routes = () => {\n    return(\n        <BrowserRouter>\n            <Header />\n            {/* <Switch>\n                <Route path='/lat=&lon=' component={Erro} />\n                <Route path='/:id' component={Home} />\n            </Switch> */}\n        </BrowserRouter>\n    );\n}\n\nexport default Routes;","import React, { Component } from 'react';\n\nclass Erro extends Component {\n\n    render() {\n        return(\n            <div className='container p-5'>\n                <h1>É preciso o preenchimento dos dois campos acima para o correto funcionamento desta aplicação. <i className=\"far fa-smile-wink\"></i></h1>\n            </div>\n        );\n    }\n}\n\nexport default Erro","import React, { Component } from 'react';\nimport Routes from './routes';\nimport './css/style.css';\n\nclass App extends Component {\n  render(){\n    return(\n      <div>\n        <Routes />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
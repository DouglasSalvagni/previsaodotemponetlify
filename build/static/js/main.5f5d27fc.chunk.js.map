{"version":3,"sources":["components/Header/index.js","pages/Home/index.js","pages/erro/index.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","state","form","lat","lon","inserirLat","bind","inserirLon","verificar","event","this","target","value","setState","className","style","fontSize","type","placeholder","id","onChange","to","Component","Home","api","suporte","dataAtual","Date","dataApi","diasSemana","tempoInfo","horaAHora","paramUrl","url","formatTempo","match","params","fetch","then","r","json","cod","list","dt_txt","city","name","num","country","getDay","weather","main","parseInt","temp","temp_min","temp_max","map","lista","time","key","dt","getDate","getMonth","getFullYear","getHours","getMinutes","Erro","Routes","exact","path","component","App","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5f5d27fc.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport '../../../node_modules/@fortawesome/fontawesome-free/css/all.min.css';\nimport { Link } from 'react-router-dom';\n\nclass Header extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            form: {\n                lat: '',\n                lon: ''\n            }\n        }\n\n        this.inserirLat = this.inserirLat.bind(this);\n        this.inserirLon = this.inserirLon.bind(this);\n        this.verificar = this.verificar.bind(this)\n    }\n\n\n    inserirLat(event) {\n        let form = this.state.form;\n        form.lat = event.target.value;\n        this.setState({form});\n    }\n\n    inserirLon(event) {\n        let form = this.state.form;\n        form.lon = event.target.value;\n        this.setState({form});\n    }\n\n    verificar(){\n        if (this.state.form.lat === '' || this.state.lon === '') {\n            return 'erro'\n        } else {\n            return `lat=${this.state.form.lat}&lon=${this.state.form.lon}`\n        }\n    }\n\n    render() {\n        return (\n            <header className=\"container p-5\">\n                <div className='row'>\n                    <div className='col-6'>\n                        <h1>Pesquisa </h1>\n                    </div>\n                    <div className='col-6'>\n                        <i className=\"fas fa-cloud-sun float-right\" style={{fontSize: '5rem'}}></i>\n                    </div>\n                </div>\n                <p>Encontre a previsão do tempo de acordo com as coordenadas a serem especificadas abaixo:  </p>\n                <form>\n\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <input type=\"text\" className=\"form-control\" placeholder=\"Digite a latitude\" id=\"latitude\" value={this.state.form.lat} \n                                onChange={this.inserirLat}/> \n                        </div>\n                        <div className=\"col\">\n                            <input type=\"text\" className=\"form-control\" placeholder=\"Digite a longitude\" id=\"longitude\" value={this.state.form.lon} \n                                onChange={this.inserirLon}/> \n                        </div>\n                        {/* <a className=\"btn btn-outline-primary center\"  href={`/tempApi`}>Temp api</a> */}\n                        {/* <a className=\"btn btn-outline-primary center\"  href={this.verificar()}>Busca</a> */}\n                        {/* <a className=\"btn btn-outline-primary center\"  href={`lat=${this.state.form.lat}&lon=${this.state.form.lon}`}>Verificar</a> */}\n                        <Link  to={`lat=${this.state.form.lat}&lon=${this.state.form.lon}`}>Verificar</Link>\n                    </div>\n\n                </form>\n            </header>\n        );\n    }\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport '../../../node_modules/@fortawesome/fontawesome-free/css/all.min.css';\n\nclass Home extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            api: '',\n            suporte: {\n                dataAtual: new Date(),\n                dataApi: '',\n                diasSemana: ['Domingo', 'Segunda-Feira', 'Terça-Feira', 'Quarta-Feira', 'Quinta-Feira', 'Sexta-Feira', 'Sábado'],\n                tempoInfo: {\n                    'Thunderstorm':['Trovoada','11d','fas fa-bolt'],\n                    'Drizzle': ['Chuvisco','09d','fas fa-cloud-rain'],\n                    'Rain':['Chuva','10d','fas fa-cloud-showers-heavy'],\n                    'Snow':['Neve','13d','far fa-snowflake'],\n                    'Mist':['Névoa','50d','fas fa-smog'],\n                    'Smoke':['Fumaça','50d','fas fa-smog'],\n                    'Haze':['Neblina', '50d','fas fa-smog'],\n                    'Dust':['Poeira','50d','fas fa-smog'],\n                    'Fog':['Névoa','50d','fas fa-smog'],\n                    'Sand':['Areia','50d','fas fa-smog'],\n                    'Ash':['Cinzas','50d','fas fa-smog'],\n                    'Squall':['Squall','50d','fas fa-smog'],\n                    'Tornado':['Tornado0','50d','fas fa-wind'],\n                    'Clear':['Limpo','01d','fas fa-sun'],\n                    'Clouds':['Nuvens','02d','fas fa-cloud']\n                },\n                horaAHora: '',\n                paramUrl: '',\n                url: 'http://api.openweathermap.org/data/2.5/forecast?APPID=7e06bd8c11c32dfc21196675a15cd05b&units=metric&',\n            }\n        };\n\n        this.formatTempo = this.formatTempo.bind(this)\n    }\n\n    componentDidMount() {\n        let state = this.state;\n        let { id } = this.props.match.params;\n        state.suporte.paramUrl = id;\n        this.setState(state);\n\n        fetch((this.state.suporte.url + this.state.suporte.paramUrl))\n            .then((r) => r.json())\n            .then((json) => {\n                let state = this.state;\n                state.api = json;\n                if (state.api.cod === '200') {\n                    state.suporte.dataApi = new Date(state.api.list[0].dt_txt);\n                    if (state.api.city.name) {\n                        this.setState(state);\n                    } else {\n                        state.api.city.name = 'Local não nominado';\n                        this.setState(state);\n                    }\n                } else if (state.api.cod === '400') {\n                    this.setState(state);\n                }\n            })\n\n    }\n\n    formatTempo(num) {\n        if (num < 10) {\n            return '0' + num\n        } else {\n            return num\n        }\n    }\n\n\n\n    render() {\n        return (\n            <div className=\"container p-5\">\n                {this.state.api.cod === '200' &&\n                    <div>\n                        <div className=\"mainWeatherCard p-5\">\n                            <div className=\"row\">\n                                <div className=\"col-md-7\">\n                                    <h1><span>{this.state.api.city.name}</span>, {this.state.api.city.country}</h1>\n                                    <h3>{this.state.suporte.diasSemana[this.state.suporte.dataApi.getDay()]}</h3>\n                                    <h4>{this.state.suporte.tempoInfo[this.state.api.list[0].weather[0].main][0]} <i className={this.state.suporte.tempoInfo[this.state.api.list[0].weather[0].main][2]}></i></h4>\n                                    <div className=\"temp\">{`${parseInt(this.state.api.list[0].main.temp)}°`}</div>\n                                </div>\n                                <div className=\"col-md-5\">\n                                    <h1>{`Mínime de ${parseInt(this.state.api.list[0].main.temp_min)}°`}</h1>\n                                    <h1>{`Máxima de ${parseInt(this.state.api.list[0].main.temp_max)}°`}</h1>\n                                    <div className=\"icon\"><i className={this.state.suporte.tempoInfo[this.state.api.list[0].weather[0].main][2]}></i></div>\n                                </div>\n                            </div>\n                        </div>\n                        <div>\n                            <div className='mainWeatherList mt-4'>\n                                <h2>Próximas Horas</h2>\n                                <p>Confira o tempo para às próximas horas.</p>\n                                <table className=\"table table-dark table-striped\"> \n                                    <thead>\n                                        <tr>\n                                            <th>Dia</th>\n                                            <th>Hora</th>\n                                            <th>Clima</th>\n                                            <th>Mínima</th>\n                                            <th>Máxima</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody >\n                                        {this.state.api.list.map((lista) => {\n                                        let time = new Date(lista.dt_txt)\n                                        return (\n                                            <tr key={lista.dt}>\n                                                <td>\n                                                    <div className='row'>\n                                                        <div className='col-md-12'>\n                                                            {this.state.suporte.diasSemana[time.getDay()]}\n                                                        </div>\n                                                        <div className='col-md-12 smallf'>\n                                                            {this.formatTempo(time.getDate())}/{this.formatTempo(time.getMonth() + 1)}/{this.formatTempo(time.getFullYear())}\n                                                        </div>\n                                                    </div>\n                                                </td>\n                                                <td>{this.formatTempo(time.getHours())}:{this.formatTempo(time.getMinutes())}</td>\n                                                <td>{this.state.suporte.tempoInfo[lista.weather[0].main][0]}  <i className={this.state.suporte.tempoInfo[lista.weather[0].main][2]}></i></td>\n                                                <td>{`${parseInt(lista.main.temp_min)}°`}</td>\n                                                <td>{`${parseInt(lista.main.temp_max)}°`}</td>\n                                            </tr>\n                                            );\n                                        })\n                                        }\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n                }\n\n                {this.state.api.cod === '400' &&\n                    <div className='row'>\n                        <div className='col-md-8'><h1>O valor inserido não é válido.</h1></div>\n                        <div className='col-md-4'><i style={{fontSize: '10rem'}} className=\"fas fa-bug\"></i></div>\n                    </div>\n                }\n\n                {this.state.api.cod === '429' &&\n                    <div className='row'>\n                        <div className='col-md-8'><h1>Excedido o limite de acesso.</h1></div>\n                        <div className='col-md-4'><i style={{fontSize: '16rem'}} className=\"fas fa-sad-tea\"></i></div>\n                    </div>\n                }\n\n            </div>\n        );\n    }\n}\n\nexport default Home;","import React, { Component } from 'react';\n\nclass Erro extends Component {\n\n    render() {\n        return(\n            <div className='container p-5'>\n                <h1>É preciso o preenchimento dos dois campos acima para o correto funcionamento desta aplicação. <i className=\"far fa-smile-wink\"></i></h1>\n            </div>\n        );\n    }\n}\n\nexport default Erro","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Header from './components/Header';\nimport Home from './pages/Home';\nimport Erro from './pages/erro'\n\nconst Routes = () => {\n    return(\n        <BrowserRouter>\n            <Header />\n            <Switch>\n                <Route exact path='/erro' component={Erro} />\n                <Route path='/:id' component={Home} />\n            </Switch>\n        </BrowserRouter>\n    );\n}\n\nexport default Routes;","import React, { Component } from 'react';\nimport Routes from './routes';\nimport './css/style.css';\n\nclass App extends Component {\n  render(){\n    return(\n      <div>\n        <Routes />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}